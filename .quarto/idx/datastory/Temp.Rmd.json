{"title":"Packages","markdown":{"headingText":"Packages","containsRefs":false,"markdown":"```{r}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(gsignal)\nlibrary(forcats)\nlibrary(htmltools)\n```\n\n```{r eval = FALSE}\nlibrary(rlist)\nlist <- tagList()\nfor(i in c(1,2,3,4,5,6)){\n  list <- list.append(list, div(\n    p(1),\n    p(9)\n  ))\n}\nlist\nlength(list)\n\nLIST <- tagList(div(p(1),p(2)),\n        div(p(1),p(2)),\n        div(p(1),p(2)),\n        div(p(1),p(2)),\n        div(p(1),p(2)),\n        div(p(1),p(2)))\nlength(LIST)\n```\n\n```{r}\n# Importing Cleaned Datasets\nlabelled_movies <- c(\"Buddy\",\"Hobbit\",\"Machete\",\"Mitty\",\"Paranormal\",\"Hunger\")\n#for(i in labelled_movies){assign(i,read_csv(sprintf(\"./src/data/cleaned/%s_cleaned.csv\",i)))}\n\n# Importing Snipped Datasets\nfor(i in c(\"ms_data\",\"screen_times\",\"label_set\")){\n  assign(i,read_csv(sprintf(\"./src/data/cleaned/snipped_%s.csv\",i)))\n}\n\nfear_labels <- grep(\"death|suspense|horror|murder|aggressive|violence|shock\", \n                    label_set$label, \n                    value=TRUE)\nms_data %>% dplyr::filter(movie == \"Paranormal Activity: The Marked Ones\") %>% distinct(label)\n\nfear_cmpd_ranked <-\n    ms_data %>% \n      dplyr::filter(!is.na(label)) %>%\n      mutate(is.fear = if_else(grepl(paste(fear_labels, collapse=\"|\"),label),\"Fear\",\"Others\")) %>%\n      group_by(is.fear)%>%\n      reframe(across(matches(\"^\\\\d\"), sum)) %>%\n      reframe(across(matches(\"^\\\\d\"),function(x){x/sum(x)})) %>%\n      mutate(is.fear=c(\"Fear\",\"Others\")[row_number(`14.0028`)]) %>%\n      pivot_longer(\n        cols = matches(\"^\\\\d\"),\n        names_to = \"cmpd\",\n        values_to = \"fraction\"\n      ) %>% \n      dplyr::filter(is.fear == \"Fear\") %>%\n      arrange(desc(fraction))\nms_data %>% \n      dplyr::filter(!is.na(label)) %>%\n      mutate(is.fear = if_else(grepl(paste(fear_labels, collapse=\"|\"),label),\"Fear\",\"Others\")) %>%\n      group_by(is.fear)%>%\n      reframe(across(matches(\"^\\\\d\"), sum)) %>%\n      reframe(across(matches(\"^\\\\d\"),function(x){x/sum(x)})) %>%\n      mutate(is.fear=c(\"Fear\",\"Others\")[row_number(`14.0028`)]) %>%\n      pivot_longer(\n        cols = matches(\"^\\\\d\"),\n        names_to = \"cmpd\",\n        values_to = \"fraction\"\n      ) %>% \n      dplyr::filter(is.fear == \"Fear\") %>%\n      arrange(desc(fraction)) %>%\n      mutate(fraction=fct_inorder(fraction,levels=fr))\n\n\nms_data %>% \n    dplyr::filter(!is.na(label)) %>%\n    pivot_longer(\n      cols = matches(\"^\\\\d\"),\n      names_to = \"cmpd\",\n      values_to = \"conc\"\n    ) %>% \n    {if(Y) dplyr::filter(., conc > 1) else(.)} %>%\n    distinct(cmpd) %>%\n    '[['(\"cmpd\") %>%\n      factor(levels = fear_cmpd_ranked$cmpd, ordered=TRUE) %>%\n  sort()\nfear_cmpd_ranked$cmpd\nY <- TRUE  \n\nfear_cmpd_ranked <-\n    ms_data %>% \n      dplyr::filter(!is.na(label)) %>%\n      mutate(is.fear = if_else(grepl(paste(fear_labels, collapse=\"|\"),label),\"Fear\",\"Others\")) %>%\n      group_by(is.fear)%>%\n      reframe(across(matches(\"^\\\\d\"), sum)) %>%\n      reframe(across(matches(\"^\\\\d\"),function(x){x/sum(x)})) %>%\n      mutate(is.fear=c(\"Fear\",\"Others\")[row_number(`14.0028`)]) %>%\n      pivot_longer(\n        cols = matches(\"^\\\\d\"),\n        names_to = \"cmpd\",\n        values_to = \"fraction\"\n      ) %>% \n      dplyr::filter(is.fear == \"Fear\") %>%\n      arrange(desc(fraction))\n\n# Labelled ms_data (Only 6 diff movies)\nlabelled_ms <- ms_data %>% \n  dplyr::filter(!is.na(label))\n\nlabelled_ms\n\n\nexp_labelled_ms <- labelled_ms %>% #To separate labels\n  separate_longer_delim(\n    cols = label,\n    delim = \"; \"\n  ) \n\n\n\ntidied_labelled_ms <- exp_labelled_ms %>% #To categorise fear and non-fear labels\n  mutate(is.fear = if_else(label %in% fear_labels, \"Fear\",\"Others\")) #(TODO: SHINY SELECT WHAT's FEAR)\n\n# Unlabelled ms_data (Excluding the buffer time before labelled movies start)\nunlabelled_ms <- ms_data %>% \n  dplyr::filter(is.na(label))\n```\n\n```{r}\n# Graph 1\n# A segmented bar plot of compound concentrations against compound mass labels. Bar plots will be segmented by total % concentration under each fear label. This will allow us to observe which compounds are most commonly present when in fear. Based on the observations, a narrowed list of compounds will be analysed in the later graphs (List A)\n\n#Chosen Colour Palette (TODO)\ncolour_palette <- c(\"#a9a9f9\",\"#009699\",\"red\",\"orange\",\"yellow\",\"green\")\ncolour_gradient <- c(\"#009699\",\"royalblue\",\"#a9a9f9\") #Low to high conc\ncolour_bkg <- c(\"#a9a9f9\",\"#009699\") #contrasting w each other and w palette\n\n#Scenes were double-counted if fell under both fear and non-fear scene labels\n\ngraph_1 <- tidied_labelled_ms %>% #To introduce %\n  group_by(cmpd) %>%\n  mutate(Tconc = sum(conc)) %>%\n  group_by(cmpd,is.fear) %>%\n  mutate(fraction = sum(conc)/Tconc) %>%\n  distinct(cmpd,is.fear,fraction) %>%\n  arrange(is.fear, desc(fraction))\n\n#For later stuff\nfear_cmpd_ranked <- graph_1$cmpd[1:(length(graph_1$cmpd)/2)]\n\n#For user input in shiny (TODO) \nuser_start_rank_1 <- 1\nuser_end_rank_1 <- 25\n\nselect_to_plot_1 <- graph_1[c(user_start_rank_1:user_end_rank_1, (length(graph_1$cmpd)-user_start_rank_1+1):(length(graph_1$cmpd)-user_end_rank_1+1)),]\n\nfear_cmpd_ranked %>%\n  slice(user_start_rank_1:user_end_rank_1) %>%\n  ggplot(aes(y = fct_reorder(cmpd,fraction), x = fraction)) +\n  geom_col(fill = colour_palette[1]) + \n  labs(title = paste(\"Top\",user_start_rank_1,\"to\",user_end_rank_1,\"Most Frequently Emitted Compounds when in Fear\"),\n       subtitle = \"Identified by distribution across different types of scenes\",\n       y = \"m/z of Compound\", \n       x = \"Fraction of the Total Concentration\") +\n  theme(panel.background = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.title.y = element_text(margin = margin(r = 10)),\n        axis.title.x = element_text(margin = margin(t = 10)),\n        plot.subtitle = element_text(margin = margin(b = 10))\n        ) + \n  scale_x_continuous(expand = c(0, 0))\n\nms_data %>% \n      dplyr::filter(!is.na(label)) %>%\n      select(label) %>%\n      separate_longer_delim(\n        cols = label,\n        delim = \"; \"\n      ) %>%\n      ggplot(aes(y=label)) +\n      geom_bar(fill = colour_palette[1]) +\n      labs(title = paste(\"Distribution of scenes\"),\n           y = \"Type of Scene\", \n           x = \"Count\") + \n      theme(axis.line = element_line(linewidth = 0.3, arrow = arrow(type='closed', length = unit(5,'pt'))),\n            panel.background = element_blank())\n\n\n\n%>%\n  select_if(where(~(all(.x<0.5))))\n  \n  \nms_data %>%\n    pivot_longer(\n      cols = matches(\"^\\\\d\"),\n      names_to = \"cmpd\",\n      values_to = \"conc\"\n    ) %>% \n    {if(Y) dplyr::filter(., conc > 0.5) else(.)} %>%\n    separate_longer_delim(\n      cols = label,\n      delim = \"; \"\n    ) %>% \n    {if(Y) dplyr::filter(., label != \"conversation: general\", label != \"conversation: conversation main actor\") else(.)} %>% \n    distinct(cmpd) %>%\n    '[['(\"cmpd\") %>%\n      factor(levels = fear_cmpd_ranked$cmpd, ordered=TRUE) %>%\n      sort()\n\n#NEW\nms_data %>% \n  dplyr::filter(!is.na(label)) %>%\n  {if(Y) dplyr::filter(.,grepl(paste(label_set$label[!label_set$label %in% c(\"conversation: general\", \"conversation: conversation main actor\")], collapse=\"|\"),label)) else(.)} %>%\n  select(matches(\"^\\\\d\")) %>% \n  select_if(., where(~any(.x>0.5))) %>%\n  colnames() %>%\n  factor(levels = fear_cmpd_ranked$cmpd, ordered=TRUE) %>%\n  sort()\n\n#scale_fill_manual(values=c(\"red\",\"blue\")\n#scale_x_discrete(guide=guide_axis(angle=90))\n#scale_fill_brewer(palette=\"Set3\")\n\nselect_to_plot_1 <- graph_1[c(user_start_rank_1:user_end_rank_1, (length(graph_1$cmpd)-user_start_rank_1+1):(length(graph_1$cmpd)-user_end_rank_1+1)),]\n  \n    select_to_plot_1 %>%\n      group_by(is.fear) %>%\n      mutate(cmpd = fct_reorder(as.character(cmpd), fraction)) %>%\n      ggplot(aes(y = cmpd, x = fraction)) +\n      geom_col() + \n      labs(title = paste(\"Top\",user_start_rank_1,\"to\",user_end_rank_1,\"Most Frequently Emitted Compounds when in Fear\"),\n           subtitle = \"Identified by distribution across different types of scenes\",\n           y = \"m/z of Compound\", \n           x = \"Fraction of the Total Concentration\", \n           fill = \"Type of Scene\") + \n      scale_fill_manual(values=colour_palette) +\n      theme(panel.background = element_blank(),\n            axis.ticks.y = element_blank(),\n            axis.title.y = element_text(margin = margin(r = 10)),\n            axis.title.x = element_text(margin = margin(t = 10)),\n            plot.subtitle = element_text(margin = margin(b = 10))\n      ) + \n      scale_x_continuous(expand = c(0, 0))\n    \n    ms_data %>% \n    dplyr::filter(!is.na(label), grepl(paste(\nlabel_set$label[!label_set$label %in% c(\"conversation: general\")], collapse=\"|\"),label)) %>%\n  select_if(where(~all(.x<0.5)))\n```\n\n```{r}\n# Graph 2 (Changed from bar to hex)\n# A bar graph displaying the total concentration of a specific chosen compound under each scene label. This will give a clearer idea of the distribution of the selected compound across different types of scenes. This will only be for compounds in List A.\n\n#DOUBLE-COUNTING\n\n#MORE SHINY TASKS: Add info about bin when hover over hex (TODO)\n\n#For user input in Shiny (TODO)\nuser_cmpd_2 <- \"60.0490\"\nuser_cmpd_2 <- \"235.1928\"\nuser_cmpd_2 <- \"48.0205\"\n\nY <- TRUE\nms_data %>% \n  dplyr::filter(!is.na(label)) %>%\n  select(`user_cmpd_2`,movie_F_ind, label) %>%\n  pivot_longer(\n    cols = matches(\"^\\\\d\"),\n    names_to = \"cmpd\",\n    values_to = \"conc\"\n  ) %>% \n  { if(Y) dplyr::filter(.,conc>0) else(.)} %>%\n  mutate(conc_perpax = conc/screen_times$number.visitors[movie_F_ind]) %>%\n  select(-conc, -movie_F_ind, -cmpd) %>%\n  separate_longer_delim(\n    cols = label,\n    delim = \"; \"\n  )\n\n#with 0 --> Highlights that be at 0 and relatively same amount of time (Due to vagueness of scene labels)\ntidied_labelled_ms %>% \n  dplyr::filter(cmpd == user_cmpd_2) %>%\n  ggplot(aes(x=conc_perpax, y=label)) + \n  geom_hex() +\n  labs(title = paste(\"Distribution of compound with m/z =\",user_cmpd_2,\"across different scenes\"),\n       subtitle = \"Inclusive of data points where compound is absent\",\n       y = \"Type of Scene\", \n       x = \"Concentration per Pax per Scene\") + \n  scale_fill_gradientn(colours = colour_gradient)\n  \n#without 0 points --> For better idea of distribution\nms_data %>% \n  dplyr::filter(!is.na(label)) %>%\n  select(`user_cmpd_2`,movie_F_ind, label) %>%\n  pivot_longer(\n    cols = matches(\"^\\\\d\"),\n    names_to = \"cmpd\",\n    values_to = \"conc\"\n  ) %>% \n  { if(Y) dplyr::filter(.,conc>0) else(.)} %>%\n  mutate(conc_perpax = conc/screen_times$number.visitors[movie_F_ind]) %>%\n  select(-conc, -movie_F_ind, -cmpd) %>%\n  separate_longer_delim(\n    cols = label,\n    delim = \"; \"\n  ) %>%\n  ggplot(aes(x=conc_perpax, y=label)) + \n  geom_hex() + \n  labs(title = paste(\"Distribution of compound with m/z =\",user_cmpd_2,\"across different scenes\"),\n       subtitle = \"Excluding data points where compound is absent\",\n       y = \"Type of Scene\", \n       x = \"Concentration per Pax perScene\") + \n  scale_fill_gradientn(colours = colour_gradient)\n\nms_data %>% \n      dplyr::filter(!is.na(label), movie == \"Paranormal Activity: The Marked Ones\") %>%\n      select(label) %>%\n      separate_longer_delim(\n        cols = label,\n        delim = \"; \"\n      ) %>%\n      ggplot(aes(y=label)) +\n      geom_bar(fill = colour_palette[1]) +\n      labs(title = paste(\"Distribution of scenes\"),\n           y = \"Type of Scene\", \n           x = \"Count\") + \n      theme(axis.line = element_line(linewidth = 0.3, arrow = arrow(type='closed', length = unit(5,'pt'))),\n            panel.background = element_blank())\n\n\nzeros <- TRUE\nif(zeros == TRUE){\n  graph_2t <- tidied_labelled_ms %>% dplyr::filter(conc > 0)\n} else {\n  graph_2t <- tidied_labelled_ms\n}\n#without 0 points --> For better idea of distribution\ngraph_2t %>% \n  dplyr::filter(cmpd == user_cmpd_2) %>%\n  ggplot(aes(x=conc_perpax, y=label)) + \n  geom_hex() + \n  labs(title = paste(\"Distribution of compound with m/z =\",user_cmpd_2,\"across different scenes\"),\n       subtitle = paste(if_else(zeros == FALSE, \"Excludes\", \"Includes\"), \"data points where compound is absent\"),\n       y = \"Type of Scene\", \n       x = \"Concentration per Pax per Scene\") + \n  scale_fill_gradientn(colours = colour_gradient)\n\nms_data %>% \n      dplyr::filter(!is.na(label)) %>%\n      select(user_cmpd_2,movie_F_ind, label) %>%\n      pivot_longer(\n        cols = matches(\"^\\\\d\"),\n        names_to = \"cmpd\",\n        values_to = \"conc\"\n      ) %>% \n      {if(Y) dplyr::filter(.,conc>0) else(.)} %>%\n      {if(Y) dplyr::filter(.,conc>1) else(.)}%>%\n      mutate(conc_perpax = conc/screen_times$number.visitors[movie_F_ind]) %>%\n      select(-conc, -movie_F_ind, -cmpd) %>%\n      separate_longer_delim(\n        cols = label,\n        delim = \"; \"\n      ) %>% \n      {if(Y) dplyr::filter(., label != \"conversation: general\", label != \"conversation: conversation main actor\") else(.)} %>% \n      ggplot(aes(x=conc_perpax, y=label)) + \n      geom_hex() +\n      labs(title = paste(\"Distribution of compound with m/z =\",user_cmpd_2,\"across different scenes\"),\n           subtitle = paste(if_else(Y, \"Excludes\", \"Includes\"), \"data points where compound is absent\"),\n           y = \"Type of Scene\", \n           x = \"Concentration per Pax per Scene\") + \n      scale_fill_gradientn(colours = colour_gradient) + \n      theme(axis.line = element_line(linewidth = 0.3, arrow = arrow(type='closed', length = unit(5,'pt'))))\n```\n\n```{r}\n# Graph 3 #REMOVE? USELESS\n# Multiple box plots will be plot to display the distribution of a compound's concentration under different scene labels. This will give a clearer idea of the distribution of concentrations, instead of just the total concentration across all similar scenes.  This will only be for compounds in List A.\n\n```\n\n```{r}\n# Graph 4 (OPTIMISED)\n\n# Other Shiny (TODO): Hover over facet for a zoom in (Show plot alone)\n\n#For user input in Shiny (TODO)\nuser_movie_3 <- \"Paranormal Activity: The Marked Ones\"\nuser_top_cmpd_3 <- 1 #A range selected by user\nuser_bottom_cmpd_3 <- 15\nuser_count_cmpd_3 <- user_bottom_cmpd_3 - user_top_cmpd_3 + 1\n\n#Vector of selected compounds\nselected_cmpd_3 <- fear_cmpd_ranked$cmpd[user_top_cmpd_3:user_bottom_cmpd_3]\n\ngraph_3t <- labelled_ms %>% \n  dplyr::filter(movie == user_movie_3) %>%\n  mutate(is.fear = if_else(grepl(paste(fear_labels, collapse=\"|\"),label), \"Fear\",\"Others\"))\n\ngraph_3t <- labelled_ms %>% \n  dplyr::filter(movie == user_movie_3) %>%\n  mutate(is.fear = if_else(label %in% fear_labels, \"Fear\",\"Others\")) %>%\n  dplyr::filter(cmpd %in% selected_cmpd_3) %>% #Select top cmpd\n  group_by(counter,cmpd) %>% #To add an ave conc common to similar movies\n  mutate(average = mean(conc_perpax)) %>% \n  group_by(cmpd) %>% \n  mutate(sum = sum(conc)) %>% ungroup()\n\n\n# Vector of absent cmpd (Complete Absence)\nremoved_cmpd <- dplyr::filter(distinct(graph_3t, cmpd, sum), sum == 0)$cmpd\n\ngraph_3 <- graph_3t %>% \n  dplyr::filter(sum != 0) %>% \n  distinct(counter,cmpd, .keep_all = TRUE) %>% #To remove movie duplicates\n  transform(cmpd=factor(cmpd, levels=selected_cmpd_3)) %>%\n  arrange(cmpd, desc(is.fear))\n  \nremoved_cmpd <- ms_data %>% \n  dplyr::filter(movie == user_movie_3) %>%\n  select(all_of(selected_cmpd_3)) %>%\n  select_if(~all(.==0)) %>%\n  colnames()\n\nremoved_cmpd\nselected_cmpd_3\nif_else(length(removed_cmpd) == length(selected_cmpd_3), 0,1)\n\n# Plot\nms <- 9\nif(ms != 0){\n  ms_data %>% \n    dplyr::filter(!is.na(label)) %>%\n    dplyr::filter(movie == user_movie_3) %>%\n    select(all_of(selected_cmpd_3[!selected_cmpd_3 %in% removed_cmpd]),counter,label) %>%\n    group_by(counter,label) %>%\n    reframe(across(matches(\"^\\\\d\"), mean)) %>%\n    mutate(is.fear = if_else(grepl(paste(fear_labels, collapse=\"|\"),label), \"Fear\",\"Others\")) %>%\n    pivot_longer(\n      cols = matches(\"^\\\\d\"),\n      names_to = \"cmpd\",\n      values_to = \"average\"\n    )  %>% #To remove movie duplicates\n    transform(cmpd=factor(cmpd, levels=selected_cmpd_3)) %>%\n    arrange(cmpd, desc(is.fear)) %>% #NOTE: IF PLOT CONC, A FEW COMPLETE ABSENCE\n    ggplot(aes(x=counter/2, y=average, colour=fct_inorder(is.fear))) + \n    geom_point(alpha=0.7) + \n    facet_wrap(~ cmpd, \n               ncol = ceiling(sqrt(user_count_cmpd_3-length(removed_cmpd))), \n               scales=\"free\", \n               labeller = as_labeller(~ paste0(\"No. \", user_top_cmpd_3 + which(selected_cmpd_3 %in% .x) - 1,\":\\n\", .x))) +\n    guides(color = guide_legend(reverse=TRUE))+\n    labs(title = paste(\"Distribution of Top\", \n                       user_top_cmpd_3, \n                       \"to\", \n                       user_bottom_cmpd_3, \n                       \"Fear Compounds in\", \n                       user_movie_3),\n         subtitle = \"Concentrations are averaged\",\n         y = \"Concentration per Scene\", \n         x = \"Duration of Movie\",\n         caption = str_wrap(if_else(length(removed_cmpd) != 0, \n                           paste(if_else(length(removed_cmpd)>1, \"Plots\", \"Plot\"),\n                                 \"for\",\n                                 if_else(length(removed_cmpd)>1, \"compounds\", \"compound\"),\n                                 \"with m/z =\",\n                                 paste(removed_cmpd, collapse=\", \"), \n                                 if_else(length(removed_cmpd)>1, \"have\", \"has\"),\n                                 \"been removed due to absence throughout movie.\"),\n                           NA), 150),\n         color = \"Type of Scene\"\n         ) + \n    theme(axis.text.y = element_text(size=5),\n          axis.text.x = element_text(size=5),\n          strip.text = element_text(size=6, margin=margin(t=1,b=2)),\n          strip.background.x = element_rect(fill=colour_palette),\n          panel.spacing = unit(1, \"lines\"),\n          panel.background = element_blank(),\n          panel.border = element_rect(fill = NA, linewidth = 0.1, color = \"grey\"),\n          plot.caption = element_text(hjust=0)) +\n    scale_color_manual(values = colour_palette)\n} else{\n  print(\"All compounds selected were absent throughout the movie selected.\")\n}\n```\n\n```{r}\n# Graph 4 (now 3) *Prioritised Fear labels\n# A line graph for the concentration of a chosen compound against time. The time will reflect the duration into a movie. Meanwhile, the list of compounds is once again restricted to List A. Multiple graphs will be either faceted or overlaid to observe the trend for the different compounds in the same movie. Scenes/Points with fear labels will be highlighted.\n\n# Other Shiny (TODO): Hover over facet for a zoom in (Show plot alone)\n\n#For user input in Shiny (TODO)\nuser_movie_3 <- \"Paranormal Activity: The Marked Ones\"\nuser_top_cmpd_3 <- 1 #A range selected by user\nuser_bottom_cmpd_3 <- 15\nuser_count_cmpd_3 <- user_bottom_cmpd_3 - user_top_cmpd_3 + 1\n\n#Vector of selected compounds\nselected_cmpd_3 <- fear_cmpd_ranked[user_top_cmpd_3:user_bottom_cmpd_3]\n\ngraph_3 <- tidied_labelled_ms %>% arrange(is.fear) %>%\n  distinct(Time, cmpd, .keep_all = TRUE) %>% #To remove expanded labels\n  arrange(counter, cmpd) %>% \n  dplyr::filter(cmpd %in% selected_cmpd_3) %>% #Select top cmpd\n  dplyr::filter(movie==user_movie_3)  %>% #Select 1 movie\n  group_by(counter,cmpd) %>% #To add an ave conc common to similar movies\n  mutate(average = mean(conc_perpax)) %>% ungroup()\n\n# Set a list of cmpd to remove (Complete Absence)\nremoved_cmpd <- graph_3 %>% pivot_wider(\n  names_from = \"cmpd\",\n  values_from = \"conc\",\n  id_cols=\"Time\"\n) %>% select_if(function(x){all(x==0) & is.numeric(x)}) %>% colnames()\n\nif(length(removed_cmpd) != 0){\n  graph_3 <- graph_3 %>% \n    dplyr::filter(!cmpd %in% removed_cmpd)\n}\n\nfinal_graph_3 <- graph_3 %>% \n    transform(cmpd=factor(cmpd, levels=selected_cmpd_3)) %>%\n    arrange(cmpd) %>% #To look at only 1 movie duration\n    distinct(counter, cmpd, .keep_all = TRUE) \n\n# Plot\nif(length(final_graph_3$cmpd) != 0){\n  final_graph_3 %>% #NOTE: IF PLOT CONC, A FEW COMPLETE ABSENCE\n    ggplot(aes(x=counter/2, y=average, colour=is.fear)) + \n    geom_point(alpha=0.7) + \n    facet_wrap(~ cmpd, \n               ncol = ceiling(sqrt(user_count_cmpd_3-length(removed_cmpd))), \n               scales=\"free\", \n               labeller = as_labeller(~ paste0(\"No. \", user_top_cmpd_3 + which(selected_cmpd_3 %in% .x) - 1,\":\\n\", .x))) + \n    labs(title = paste(\"Distribution of Top\", \n                       user_top_cmpd_3, \n                       \"to\", \n                       user_bottom_cmpd_3, \n                       \"Fear Compounds in\", \n                       user_movie_3),\n         subtitle = \"Concentrations are averaged\",\n         y = \"Concentration per Scene\", \n         x = \"Duration of Movie\",\n         caption = str_wrap(if_else(length(removed_cmpd) != 0, \n                           paste(if_else(length(removed_cmpd)>1, \"Plots\", \"Plot\"),\n                                 \"for\",\n                                 if_else(length(removed_cmpd)>1, \"compounds\", \"compound\"),\n                                 \"with m/z =\",\n                                 paste(removed_cmpd, collapse=\", \"), \n                                 if_else(length(removed_cmpd)>1, \"have\", \"has\"),\n                                 \"been removed due to absence throughout movie.\"),\n                           NA), 150),\n         color = \"Type of Scene\"\n         ) + \n    theme(axis.text.y = element_text(size=5),\n          axis.text.x = element_text(size=5),\n          strip.text = element_text(size=6, margin=margin(t=1,b=2)),\n          strip.background.x = element_rect(fill=colour_palette),\n          panel.spacing = unit(1, \"lines\"),\n          panel.background = element_blank(),\n          panel.border = element_rect(fill = NA, linewidth = 0.1, color = \"grey\"),\n          plot.caption = element_text(hjust=0)) +\n    scale_color_manual(values = colour_palette)\n} else{\n  print(\"All compounds selected were absent throughout the movie selected.\")\n}\n```\n\n```{r}\n# Graph 5 (now 4)\n# For a chosen compound, different screenings of the same movie are selected and the concentration of that compound against time is plot and overlaid for the different screenings. These screenings will be selected according to a criteria set by the user, such that the other variables for those screenings are relatively similar. This allows us to observe for any trends between the compound emission and factors such as the time of day, type of fear, and the influence of people.\n\n# Hover for zoom in of that specific screening plot (TODO)\n# Selection of screenings to focus on (TODO)\n# https://stackoverflow.com/questions/42259826/hyperlinking-text-in-a-ggplot2-visualization (CONSIDER)\n\n#For user input in Shiny (TODO)\nuser_movie_4 <- \"Paranormal Activity: The Marked Ones\"\nuser_cmpd_4 <- \"19.0096\" #A range selected by user\n\nremoved_screens <- ms_data %>% \n  dplyr::filter(movie == user_movie_4) %>%\n  select(user_cmpd_4,movie_F_ind,counter) %>%\n  group_by(movie_F_ind) %>%\n  pivot_wider(\n    names_from = movie_F_ind,\n    values_from = user_cmpd_4,\n    id_cols = counter\n  ) %>%\n  select_if(~all(.==0)) %>%\n  colnames()\n\ndplyr::filter(!is.na(label)) %>%\n    group_by(counter,label) %>%\n    reframe(across(matches(\"^\\\\d\"), mean)) %>%\n    mutate(is.fear = if_else(grepl(paste(fear_labels, collapse=\"|\"),label), \"Fear\",\"Others\")) %>%\n    pivot_longer(\n      cols = matches(\"^\\\\d\"),\n      names_to = \"cmpd\",\n      values_to = \"average\"\n    )  %>% #To remove movie duplicates\n    transform(cmpd=factor(cmpd, levels=selected_cmpd_3)) %>%\n    arrange(cmpd, desc(is.fear)) %>% #NOTE: IF PLOT CONC, A FEW COMPLETE ABSENCE\n  \ngraph_4 <- tidied_labelled_ms %>% arrange(is.fear) %>%\n  distinct(Time, cmpd, .keep_all = TRUE) %>% #To remove expanded labels\n  arrange(counter, cmpd) %>% \n  dplyr::filter(cmpd == user_cmpd_4) %>% #Select top cmpd\n  dplyr::filter(movie==user_movie_4) %>% #Select 1 movie\n  mutate(movie_F_ind = fct_reorder2(as.character(movie_F_ind), counter, conc_perpax)) %>% arrange(movie_F_ind) \n\n# FOR SCREENING SELECTION (TODO)\n# %>% dplyr::filter(movie_F_ind %in% c(99,100))\n  \n#TODO: Uncheck screenings that are in removed_screens\n\ngraph_4_info <- ms_data %>% \n  dplyr::filter(!is.na(label),\n                movie == user_movie_4,\n                movie_F_ind %in% selected_screenings) %>%\n  select(user_cmpd_4,counter,label,movie_F_ind) %>%\n  group_by(movie_F_ind) %>%\n  pivot_longer(\n      cols = matches(\"^\\\\d\"),\n      names_to = \"cmpd\",\n      values_to = \"conc\"\n    ) %>%\n  ungroup() %>%\n  mutate(conc_perpax = (max(conc/screen_times$number.visitors[movie_F_ind])-min(conc/screen_times$number.visitors[movie_F_ind]))) %>%\n  distinct(counter,.keep_all = TRUE) %>%\n  mutate(is.fear = if_else(grepl(paste(fear_labels, collapse=\"|\"),label),\"Fear\",\"Others\")) %>%\n  select(counter, is.fear,conc_perpax)\n\ngraph_4_height_info <- \n  dplyr::filter(ms_data,!is.na(label),\n                movie == user_movie_4,\n                movie_F_ind %in% selected_screenings) %>%\n  pivot_longer(\n      cols = matches(\"^\\\\d\"),\n      names_to = \"cmpd\",\n      values_to = \"conc\"\n    ) %>%\n  ungroup() %>%\n  mutate(conc_perpax = conc/screen_times$number.visitors[movie_F_ind]) %>% \n  '[['(`user_cmpd_4`)\n\n\nselected_screenings <- c(99,100)\nms_data %>% \n  dplyr::filter(!is.na(label),\n                movie == user_movie_4) %>%\n  {if(length(selected_screenings != 0)) {if(.$movie[1] %in% screen_times$movie[selected_screenings]) dplyr::filter(., movie_F_ind %in% selected_screenings) else(.)} else(.)} %>% distinct(movie_F_ind)\n\n%>%\n  select(user_cmpd_4,counter,label,movie_F_ind) %>%\n  pivot_longer(\n      cols = matches(\"^\\\\d\"),\n      names_to = \"cmpd\",\n      values_to = \"conc\"\n    ) %>%\n  mutate(conc_perpax = conc/screen_times$number.visitors[movie_F_ind]) %>%\n  mutate(movie_F_ind = fct_reorder2(as.character(movie_F_ind), counter, conc_perpax)) %>%\n  arrange(movie_F_ind) %>% #NOTE: IF PLOT CONC, A FEW COMPLETE ABSENCE\n  ggplot(aes(x=counter/2, y=conc_perpax)) + \n  geom_tile(data = graph_4_info %>% dplyr::filter(is.fear == \"Fear\"),\n            height=max(graph_4_height_info)-min(graph_4_height_info),\n            aes(fill=\"Fear\"),linetype=0,alpha=0.3) +\n  geom_tile(data = graph_4_info %>% dplyr::filter(is.fear == \"Others\"), \n            height=max(graph_4_height_info)-min(graph_4_height_info), \n            aes(fill=\"Others\"),linetype=0,alpha=0.1) +\n  geom_line(aes(group = movie_F_ind, color = movie_F_ind)) +\n  labs(title = paste(\"Distribution of compound with m/z =\", \n                     user_cmpd_4, \n                     \"across duration of\", \n                     user_movie_4),\n       subtitle = \"Each screening is represented by a line graph.\",\n       y = \"Concentration per Scene\", \n       x = \"Duration of Movie (min)\",\n       color = \"Screening\",\n       fill = \"Type of Scene\") + \n  theme(panel.background = element_blank()) + \n  scale_fill_manual(values = colour_bkg) +\n  scale_color_manual(values = colour_palette) +\n  scale_x_continuous(expand = c(0, 0)) + \n  scale_y_continuous(expand = c(0, 0))\nscreen_times$movie[movie]\n# Print Screening Details (By clicking on label) (TODO)\ngraph_4 %>% distinct(movie_F_ind) %>% arrange(movie_F_ind)\n# movie A \ngraph_4 %>% distinct(movie_F_ind) %>% arrange(movie_F_ind) # %>% ...\n# No. of people, Time of day, Date (Maybe got spoilers so less scared haha)\n```\n\n```{r}\n# Graph 6 (now 5)\n# For the top fear compounds determined, their average emission will be tabulated for different movies, throughout the movie and across multiple screenings. This emission intensity will be plot against the online fear ratings for these movies to give an idea of whether the online ratings are an accurate reflection of our chemical reflection, vice versa.\n\n#TODO: Update!\nFinal_fear_cmpd_ranked <- fear_cmpd_ranked\n\n#Fear Type A: Identified w cmpd A\nuser_cmpd_5 <- \"235.1928\" #SELECT from really narrowed few (TODO)\n\nms_data %>% \n  dplyr::filter(!is.na(label)) %>%\n  select(user_cmpd_5,counter,label,movie,movie_F_ind) %>%\n  pivot_longer(\n      cols = matches(\"^\\\\d\"),\n      names_to = \"cmpd\",\n      values_to = \"conc\"\n    ) %>%\n  mutate(conc_perpax = conc/screen_times$number.visitors[movie_F_ind]) %>% \n  ggplot(aes(x = conc_perpax, y = movie)) +\n  geom_boxplot() +\n  labs(x = \"Concentration per Pax per Scene\", \n       y = \"Movie\",\n       title = paste(\"Distribution of compound with m/z =\", user_cmpd_5))\n\nms_data %>%\n  select(user_cmpd_5,counter,label,movie,movie_F_ind) %>%\n  pivot_longer(\n      cols = matches(\"^\\\\d\"),\n      names_to = \"cmpd\",\n      values_to = \"conc\"\n    ) %>%\n  group_by(movie) %>%\n  mutate(conc_perpax = conc/screen_times$number.visitors[movie_F_ind],\n         overall_ave_conc_perpax = mean(conc_perpax)) %>%\n  ungroup() %>%\n  distinct(movie, .keep_all = TRUE) %>%\n  mutate(fear_rating = screen_times$fear_rating[movie_F_ind]) %>% \n  ggplot(aes(x = fear_rating, y = overall_ave_conc_perpax)) +\n  geom_point() + geom_line() + \n  labs(x = \"Online Fear Ratings\",\n       y = \"Average Concentration per Pax per Scene\",\n       title = \"Comparison of Actual and Expected Fear Ratings\", \n       subtitle = paste(\"Based on compound with m/z =\",user_cmpd_5), \n       #caption = \"Fear ratings are an average of rating obtained from Reel Scary and Common Sense Media\",\n       caption=a(\"ggplot2 Package\", href = \"https://ggplot2.tidyverse.org/\"))\n\n\n\n\n#DONT EXACTLY UNDERSTAND, but it gets the hyperlink (TODO SUSSSS)\nlibrary(grid)\n## Force 'grid' grobs from 'ggplot2' plot\ngrid.force()\n## List all grobs in plot\ngrid.ls()\n## Find the grobs representing the text labels on the axes\ntickLabels <- grid.grep(\"caption::text\", grep=TRUE, global=TRUE)\n## Check which one is the y-axis\nlapply(tickLabels, function(x) grid.get(x)$label)\n\n\n## Add hyperlinks to the axis tick labels\nlibrary(gridSVG)\ngrid.hyperlink(tickLabels[[1]],\n               href=\"https://ggplot2.tidyverse.org/\",\n               group=FALSE)\n## Export to SVG (and view in a browser)\ngrid.export(\"linked-plot.svg\")\n\n\n\n#without 0 values ?(TBC)\ngraph_5c <- graph_5a %>%\n  dplyr::filter(conc>0)\n\ngraph_5c %>% \n  ggplot(aes(x = conc_perpax, y = movie)) +\n  geom_boxplot() +\n  labs(x = \"Concentration per Pax per Scene\", \n       y = \"Movie\",\n       title = paste(\"Distribution of compound with m/z =\", user_cmpd_5))\n```\n\n# Old Graphs/Code\n```{r eval=FALSE}\n#Graph 2 average values --> Did not work out since lots of 0\ngraph_2 <- tidied_labelled_ms %>% #To ave conc per scene\n  dplyr::filter(cmpd == user_cmpd_2) %>%\n  group_by(label) %>%\n  mutate(average = mean(conc)) %>%\n  distinct(label,average, cmpd) %>%\n  arrange(desc(average))\n  \ngraph_2 %>%\n  ggplot(aes(y = average, x = label)) +\n  geom_col() + \n  labs(title = paste(\"Distribution of Compound of m/z =\",user_cmpd_2,\"across different scene labels\"),\n       subtitle = \"For scenes with more than 1 label assigned, concentrations were double-counted\",\n       y = \"Average Concentration per Scene\", \n       x = \"Type of Scene\") + \n  scale_x_discrete(guide=guide_axis(angle=90))\n```","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Temp.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","theme":"minty"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}